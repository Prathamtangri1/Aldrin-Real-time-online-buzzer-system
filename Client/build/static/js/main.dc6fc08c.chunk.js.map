{"version":3,"sources":["Components/ButtonAppBar.js","Components/CentreButton.js","Components/InitialOptions.js","Components/JoinGameOptions.js","Components/PlayersBuzzed.js","Components/Times.js","Components/PlayersJoined.js","Components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","fontFamily","fontSize","ButtonAppBar","props","classes","pname","Array","isArray","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","CentreButton","onClick","this","Component","margin","Transition","React","forwardRef","ref","Slide","direction","InitialOptions","useState","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","TransitionComponent","DialogTitle","id","role","DialogActions","size","newGame","joinGame","textField","marginLeft","JoinGameOptions","gameId","state","setState","complete","handleChange","name","event","target","value","DialogContent","DialogContentText","TextField","label","onChange","playerInfo","table","minWidth","background","createData","time","rows","PlayersBuzzed","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","component","scope","marginTop","topGrid","textAlign","paper","padding","palette","text","secondary","button","height","width","StyleDisplay","buttonDisplay","controls","Grid","container","justify","alignItems","onStartClick","onStopClick","onResetClick","alignContent","item","xs","min","secs","milis","Times","intervalId","incrementTime","bind","setInterval","clearInterval","saveTime","handleStartClick","handleStopClick","handleResetClick","backgroundColor","SimpleList","List","ListItem","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","App","winner","options","ptype","handleBuzzerClick","handleNewGame","pnames","numberOfPlayers","refs","times","jg","hostSees","playerSees","newClientSees","gutterBottom","console","log","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc6fc08c.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"Playball\",\n    fontSize: 25,\n  },\n}));\n\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n  let pname = \"Login\";\n\n  if(Array.isArray(props.pname)) {\n    pname = \"Admin\";\n  }\n  else if(props.pname === \"\") {\n    pname = \"Login\";\n  }\n  else {\n    pname = props.pname;\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Aldrin\n          </Typography>\n          <Button color=\"inherit\">{pname}</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, {Component} from 'react';\nimport './CentreButton.css';\n\nclass CentreButton extends Component {\n    render(){\n        return(\n        <div>\n            <div className=\"button-background\"></div>\n            <div className=\"button\" onClick={this.props.onClick}></div>\n        </div>\n        );\n    }\n}\n\nexport default CentreButton;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slide from '@material-ui/core/Slide';\n\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function InitialOptions(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(true);\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function newGame() {\n    props.newGame();\n    handleClose();\n  }\n\n  function joinGame() {\n    props.joinGame();\n    handleClose();\n  }\n\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" TransitionComponent={Transition}>\n        <DialogTitle id=\"form-dialog-title\">Online Buzzer <span role=\"img\" aria-label=\"joystick emoji\">️🕹️</span></DialogTitle>\n        <DialogActions>\n          <Button variant=\"contained\" size=\"large\" onClick={newGame} color=\"primary\" className={classes.margin}>\n            New Game\n          </Button>\n          <Button variant=\"contained\" size=\"large\" onClick={joinGame} color=\"primary\" className={classes.margin}>\n            Join Game\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slide from '@material-ui/core/Slide';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\n\nexport default function JoinGameOptions(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    open: true,\n    setOpen: true,\n    gameId: \"\",\n    pname: \"\",\n  });\n\n  function handleClose() {\n    setState({setOpen: false});\n    props.complete();\n  }\n\n  function handleSubmit() {\n    props.playerInfo(state.pname, state.gameId);\n    handleClose();\n  }\n\n  const handleChange = name => event => {\n    setState({ ...state, [name]: event.target.value });\n  };\n\n  return (\n    <div>\n      <Dialog open={state.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\"  TransitionComponent={Transition}>\n        <DialogTitle id=\"form-dialog-title\">New Player</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <TextField\n              id=\"outlined-gameId\"\n              label=\"GameID\"\n              className={classes.textField}\n              value={state.gameId}\n              onChange={handleChange('gameId')}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n\n            <TextField\n              id=\"outlined-pname\"\n              label=\"Pname\"\n              className={classes.textField}\n              value={state.pname}\n              onChange={handleChange('pname')}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\n\n//   const classes = useStyles();\n\n//   const [open, setOpen] = React.useState(true);\n\n//   function handleClose() {\n//     setOpen(false);\n//   }\n\n//   return (\n//     <div>\n//       <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" TransitionComponent={Transition}>\n//         <DialogTitle id=\"form-dialog-title\">Online Buzzer Join<span role=\"img\" aria-label=\"joystick emoji\">️🕹️</span></DialogTitle>\n//         <DialogActions>\n//           <Button variant=\"contained\" size=\"large\" onClick={handleClose} color=\"primary\" className={classes.margin}>\n//             New Game\n//           </Button>\n//           <Button variant=\"contained\" size=\"large\" onClick={handleClose} color=\"primary\" className={classes.margin}>\n//             Join Game\n//           </Button>\n//         </DialogActions>\n//       </Dialog>\n//     </div>\n//   );\n// }\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 100,\n    background: '#f5f5f5',\n  },\n});\n\nfunction createData(name, time) {\n  return { name,time };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159),\n  createData('Ice cream sandwich', 237),\n  createData('Eclair', 262),\n  createData('Cupcake', 305),\n  createData('Gingerbread', 356),\n];\n\nexport default function PlayersBuzzed() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Player</TableCell>\n            <TableCell align=\"right\">Time</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.time}</TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, {Component} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 20,\n    },\n    topGrid: {\n        marginTop: 10,\n        textAlign: \"center\",\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    button: {\n        margin: theme.spacing(1),\n        height: 80,\n        width: 150,\n    },\n}));\n\nfunction StyleDisplay(props) {\n    const classes = useStyles();\n    let buttonDisplay = \"\";\n    if(props.controls === \"on\") {\n        buttonDisplay = <Grid container spacing={3} className={classes.topGrid} justify=\"center\" alignItems=\"center\">\n                            <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.button} onClick={props.onStartClick}>\n                                <Typography variant=\"h6\">\n                                    Start\n                                </Typography>\n                            </Button>\n                            <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.button} onClick={props.onStopClick}>\n                                <Typography variant=\"h6\">\n                                    Stop\n                                </Typography>\n                            </Button>\n                            <Button variant=\"contained\" size=\"large\" color=\"primary\" className={classes.button} onClick={props.onResetClick}>\n                                <Typography variant=\"h6\">\n                                    Reset\n                                </Typography>\n                            </Button>\n                        </Grid>\n    }\n\n    return(\n        <div className={classes.root}>\n            {buttonDisplay}\n            <Grid container spacing={1} className={classes.topGrid} justify=\"center\"\n            alignItems=\"center\" alignContent=\"center\">\n                <Grid item xs alignContent=\"center\">\n                    <Typography variant=\"h1\">\n                        {props.min > 9 ? \"\" + props.min : \"0\" + props.min}:{props.secs > 9 ? \"\" + props.secs : \"0\" + props.secs}:{props.milis > 9 ? \"\" + props.milis : \"0\" + props.milis}\n                    </Typography>\n                    {/* <Typography variant=\"h3\">\n                        {props.milis < 10 ? \"00\"+props.milis : (props.milis < 100 ? \"0\"+props.milis : \"\"+props.milis)}\n                    </Typography> */}\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nclass Times extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            min: 0,\n            secs: 0,\n            milis: 0,\n        }\n\n        this.intervalId = null;\n\n        this.incrementTime = this.incrementTime.bind(this);\n    }\n\n    handleStartClick() {\n        if(this.intervalId == null) {\n            this.intervalId = setInterval(this.incrementTime, 10);\n        }\n    }\n\n    handleStopClick() {\n        clearInterval(this.intervalId);\n        this.intervalId = null;\n        this.props.saveTime(this.state.min, this.state.secs, this.state.milis);\n    }\n\n    handleResetClick() {\n        clearInterval(this.intervalId);\n        this.intervalId = null;\n        this.props.saveTime(this.state.min, this.state.secs, this.state.milis);\n        this.setState({min: 0, secs: 0, milis: 0});\n    }\n\n    incrementTime() {\n        let {min, secs, milis} = this.state;\n        milis = milis + 1;\n        if(milis > 99) {\n            secs = secs + 1;\n            milis = 0;\n            if(secs > 59) {\n                min++;\n                secs = 0;\n            }\n        }\n\n        this.setState({min: min, secs: secs, milis: milis});\n    }\n\n    render() {\n        return (\n            <StyleDisplay min={this.state.min} secs={this.state.secs} milis={this.state.milis} onStartClick={() => this.handleStartClick()} onStopClick={() => this.handleStopClick()}  onResetClick={() => this.handleResetClick()} controls={this.props.controls}/>\n        );\n    }\n}\n\nexport default Times;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: '#f5f5f5',\n  },\n}));\n\n\nexport default function SimpleList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem>\n          <ListItemIcon>\n            <AccountCircleIcon fontSize=\"large\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Guy1\" />\n          <ListItemSecondaryAction>\n            <IconButton edge=\"end\" aria-label=\"delete\">\n              <DeleteIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem>\n          <ListItemIcon>\n            <AccountCircleIcon fontSize=\"large\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Guy2\" />\n          <ListItemSecondaryAction>\n            <IconButton edge=\"end\" aria-label=\"delete\">\n              <DeleteIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport ButtonAppBar from './ButtonAppBar.js';\nimport CentreButton from './CentreButton.js';\nimport InitialOptions from './InitialOptions.js';\nimport JoinGameOptions from './JoinGameOptions.js';\nimport PlayersBuzzed from './PlayersBuzzed.js'\nimport Times from './Times';\nimport Typography from '@material-ui/core/Typography';\nimport PlayersJoined from './PlayersJoined.js'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      min: 0,\n      secs: 0,\n      milis: 0,\n      winner: false,\n      options: \"initial\",\n      ptype: \"host\",\n    }\n\n    this.newGame = false;\n    this.joinGame = false;\n\n    this.handleBuzzerClick = this.handleBuzzerClick.bind(this);\n    this.handleNewGame = this.handleNewGame.bind(this);\n    this.saveTime = this.saveTime.bind(this);\n    this.pnames = \"Host\";\n    this.numberOfPlayers = 0;\n    this.gameId = \"\";\n  }\n\n  handleBuzzerClick() {\n    this.refs.times.handleStopClick();\n  }\n\n  saveTime(min, secs, milis) {\n    this.setState({min: min, secs: secs, milis: milis});\n  }\n\n  handleNewGame() {\n    this.gameId = \"uwueop23\";\n    this.setState({options: \"game_created\", ptype: \"host\"});\n  }\n\n  render(){\n    let jg=\"\", hostSees=\"\", playerSees=\"\", newClientSees=\"\";\n    if(this.state.options === \"game_created\" && this.state.ptype === \"host\") {\n      newClientSees = \"\";\n      //ng = <NewGameOptions playerNames={(num) => {this.setState({options: \"game_created\"}); this.numberOfPlayers = num; this.pnames = [];}} gameId={(gameId) => this.gameId = gameId}/>\n      hostSees =  <div className=\"host\">\n                    <div className=\"times\">\n                      <Times ref=\"times\" saveTime={(min, secs, milis) => this.saveTime(min, secs, milis)} controls = {\"on\"}/>\n                    </div>\n                    <hr className=\"hr\"/>\n                    <div className=\"playersBuzzed\">\n                      <Typography variant=\"h5\" gutterBottom>\n                        Players Buzzed\n                      </Typography>\n                      <PlayersBuzzed />\n                    </div>\n                    <hr className=\"hr2\"/>\n                    <div className=\"playersBuzzed\">\n                      <Typography variant=\"h5\" gutterBottom>\n                        Players Joined\n                      </Typography>\n                      <PlayersJoined />\n                    </div>\n                  </div>\n\n    }\n    else if(this.state.options === \"game_joined\" && this.state.ptype === \"player\") {\n      newClientSees = \"\";\n      playerSees =  <div>\n                      <div className=\"times\">\n                        <Times ref=\"times\" saveTime={(min, secs, milis) => this.saveTime(min, secs, milis)} controls = {\"off\"} />\n                      </div>\n                      <div className=\"buzzer\">\n                        <CentreButton onClick={this.handleBuzzerClick}/>\n                      </div>\n                    </div>\n    }\n    else {\n      newClientSees = <div>\n                        <div className=\"times\">\n                          <Times ref=\"times\" saveTime={(min, secs, milis) => this.saveTime(min, secs, milis)} controls = {\"off\"} />\n                        </div>\n                        <div className=\"buzzer\">\n                          <CentreButton onClick={this.handleBuzzerClick}/>\n                        </div>\n                      </div>\n    }\n\n    // if(this.state.options === \"pnames\") {\n    //   pnames = <PlayerNameOptions numberOfPlayers={this.numberOfPlayers} pnames={(pnm) => {this.pnames = pnm; console.log(this.pnames);}} gameId={this.gameId}/>\n    // }\n    \n    if(this.state.options === \"join\") {\n      jg = <JoinGameOptions complete={() => this.setState({options: \"game_joined\", ptype: \"player\"})} playerInfo={(pname, gameId) => {this.gameId = gameId; this.pnames = pname; console.log(this.gameId); console.log(this.pnames);}}/>\n    }\n\n    return (\n      <div>\n        <InitialOptions newGame={() => this.handleNewGame()} joinGame={() => this.setState({options: \"join\"})}/>\n        {/* {ng}\n        {pnames} */}\n        {jg}\n        <div className=\"main\">\n          <div className=\"nav-bar\">\n            <ButtonAppBar pname={this.pnames}/>\n          </div>\n          {newClientSees}\n          {hostSees}\n          {playerSees}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}